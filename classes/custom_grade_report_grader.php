<?php
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.

/**
 * Custom grader report for ASES utitlities
 *
 * @author     Luis Gerardo Manrique Cardona
 * @package    block_ases
 * @copyright  2018 Luis Gerardo Manrique Cardona <luis.manrique@correounivalle.edu.co>
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
defined('MOODLE_INTERNAL') || die;
require_once $CFG->dirroot . '/grade/report/grader/lib.php';
class custom_grade_report_grader extends grade_report_grader {

    public static function append_percentages_to_item_categories(&$rigth_rows, $courseid) {
        $indexes_of_category_item_names= custom_grade_report_grader::get_item_category_title_row_indexes($rigth_rows);
        $doc = new DOMDocument("1.0", 'utf-8');
        if ( $indexes_of_category_item_names ) {

            foreach( $indexes_of_category_item_names as $index_of_category_item_names ) {
                /* @var html_table_row $category_item_row */
                $category_item_row = $rigth_rows[$index_of_category_item_names];
                $category_item_cells = $category_item_row->cells;

                /* @var html_table_cell $category_item_cell */
                foreach ($category_item_cells as $category_item_cell) {

                    if (!is_null($category_item_cell->text) && $category_item_cell->text !== '') {
                        $doc->loadHTML('<?xml encoding="utf-8" ?>' . $category_item_cell->text);
                        $span_title = $doc->getElementsByTagName('span');
                        if ($span_title->item(0)) {
                            $category_span = $span_title->item(0);
                            $category_name = $category_span->getAttribute('title');
                            $category = grade_category::fetch(array('courseid' => $courseid, 'fullname' => $category_name));
                            $category_parent = $category->get_parent_category();
                            if ($category_parent->aggregation == 10) { // if agregation is Weighted mean of grades
                                $category_agregationcoef = $category->get_grade_item()->aggregationcoef;
                                $agregationcoef = number_format((float)$category_agregationcoef, 2, '.', '');
                                $category_span->textContent .= " ($agregationcoef%)";
                                $category_item_cell->text = $doc->saveHTML();
                            }

                        }

                    }
                }
            }
        }
    }

    public static function append_percentages_to_items(&$rigth_rows) {
        $index_of_item_names = custom_grade_report_grader::get_items_title_row_index($rigth_rows);
        //If exists a row with item names
        if ($index_of_item_names !== false ) {
            /* @var html_table_row $item_name_row */
            $item_name_row = $rigth_rows[$index_of_item_names];
            $item_name_cells = $item_name_row->cells;
            /* @var html_table_cell $item_name_cell */

            foreach ($item_name_cells as $item_name_cell) {
                $item_id = $item_name_cell->attributes['data-itemid'];
                $item = grade_item::fetch(array('id' => $item_id));
                /* @var $item_parent_category grade_category */
                $item_parent_category = $item->get_parent_category();
                if (
                    $item->itemtype !== 'course' && /* Total course grade, always is 0.0% */
                    $item_parent_category->aggregation == 10) { // if agregation is Weighted mean of grades
                    $agregationcoef = number_format((float)$item->aggregationcoef, 2, '.', '');
                    $item_name_cell->text .= " ($agregationcoef%)";
                }
            }
        }
    }
    public function get_right_rows($displayaverages) {

        $rigth_rows = parent::get_right_rows($displayaverages); // TODO: Change the autogenerated stub
        custom_grade_report_grader::append_percentages_to_item_categories($rigth_rows, $this->courseid);
        custom_grade_report_grader::append_percentages_to_items($rigth_rows);
        return $rigth_rows;
    }


    /**
     * Return the index of the row than contains the items name
     *
     * In a set of rows of the grader element, the item rows always the cells have in 'attributes', 'data-itemiid' property
     *
     *
     * # Example
     * This is a cell than contains a grade item name:
     *```
     * [0] => html_table_cell Object
     *   (
     *   [id] =>
     *   [text] =>nota de prueba
     *   [abbr] =>
     *   [colspan] => 1
     *   [rowspan] =>
     *   [scope] => col
     *   [header] => 1
     *   [style] =>
     *   [attributes] => Array
     *   (
     *   [class] => item catlevel1 highlightable i84313
     *   [data-itemid] => 84313
     *   )
     *   )
     *```
     * @see html_table_cell
     * @see html_table_row
     * @param $rows
     * @return false|int If does not exist the row with the item names, return false, return its index otherwise
     */
    public static function get_items_title_row_index($rows) {
        /* @var html_table_row $row */
        foreach($rows as $key => $row) {
            /* @var html_table_cell $cell */
            foreach($row->cells as $cell) {
                if(isset($cell->attributes) && isset($cell->attributes['data-itemid'])) {
                    return $key;
                }
            }
        }
        return false;
    }

    /**
     * Return the indexes of the row than contains the item categories names, can be exist diferent
     * levels of grade categories, each level is a row
     *
     * In a set of rows of the grader element, the category item rows, always
     * the cells have in 'attributes', a class named 'category'
     *
     * @param $rows
     * @return bool|array(int)
     */
    public static function get_item_category_title_row_indexes($rows) {
        $category_title_indexes = array();
        /* @var html_table_row $row */
        foreach($rows as $key => $row) {
            /* @var html_table_cell $cell */
            foreach($row->cells as $cell) {
                if(
                    $key !== 0 && //Always, the first grade category is the course name and cotains all others
                    isset($cell->attributes) &&
                    isset($cell->attributes['class']) &&
                    /* Should contain a class 'category', not 'categoryitem' or other, exactly 'category'*/
                    preg_match('#\\bcategory\\b#', $cell->attributes['class']) === 1)  {
                    $category_title_indexes[$key] = true;
                }
            }
        }
        if(count($category_title_indexes) > 0) {
            return array_keys($category_title_indexes);
        }
        return false;
    }
}