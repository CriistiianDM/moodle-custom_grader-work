define(["local_customgrader/vendor-vue","local_customgrader/vendor-vue-router","local_customgrader/vendor-vuex","local_customgrader/vendor-vue-resource","local_customgrader/vendor-vue-js-modal","local_customgrader/vendor-vue-flex","local_customgrader/vendor-vue-toasted","local_customgrader/vendor-loading-indicator","local_customgrader/vendor-lodash","local_customgrader/grader-store","local_customgrader/grader-enums","local_customgrader/grader-utils","local_customgrader/grader-component-main","local_customgrader/grader-router","local_customgrader/grader-filters","local_customgrader/grader-constants"],function(e,t,n,a,i,o,s,r,d,l,c,m,g,u,h,p){e.use(t),e.use(n),e.use(a),e.use(i.default,{dialog:!0}),e.use(o),e.use(s.default,{iconPack:"custom-class"});var f="updateCategoryOK",y="addElementOK",v="edit-category",b="add-element";const C={name:"CATEGORÍA",id:0},I={name:"ÍTEM",id:1},w={name:"PARCIAL",id:2},E=[C,I,w];var A=new n.Store(l.store),x=(e.component("select-aggregation",{template:'\n            <select \n            v-model="aggregation" \n            @change="changeAggregation($event)" \n            id="aggregation">\n                <option \n                v-for="_aggregation in aggregations"\n                v-bind:selected="_aggregation.id == aggregation"\n                v-bind:value="_aggregation.id"\n                >{{_aggregation.name}}</option>\n            </select>\n        ',props:["initialAggregation"],data:function(){return{aggregation:c.aggregations.SIMPLE,aggregations:p.aggregations}},created:function(){this.aggregation=this.initialAggregation?this.initialAggregation:this.aggregation},methods:{changeAggregation(e){this.$emit("changeAggregation",e.target.value)}}}),e.component("edit-category-form",{template:'    \n                <div style="width: 600px; height: 300px;" class="edit-category-form">\n                    <form style="width: 570px; height: 270px;">\n                        <h3 :style="{ \'text-align\': \'center\' }">Editando Categoría:</h3>\n                        <br />\n                        <label for="categoryFullName">\n                            Nombre de la categoria:  \n                        </label>\n                        <input :disabled="isCourseCategory" id="categoryFullName" v-model="categoryFullName">\n                        <br />\n                        <label for="aggregation">\n                        Tipo de calificación:\n                        </label>\n                        <select-aggregation \n                                v-bind:initialAggregation="category.aggregation"\n                                v-on:changeAggregation="changeAggregation">\n                        </select-aggregation>\n                        <br />\n                        <br />\n                        <div style="text-align:center; bottom:50px;">\n                                <button :style="boton" type="button" v-on:click="updateCategory">Guardar</button>\n                        </div>\n                    </form>\n                </div>\n            ',data:function(){return{categoryFullName:"",gradeTypeId:0,aggregations:p.aggregations,boton:{"background-color":"#cd1f32",color:"white"}}},computed:{...n.mapState(["selectedCategoryId"]),...n.mapGetters({category:"selectedCategory"}),isCourseCategory:function(){return 1==this.category.depth}},mounted:function(){this.categoryFullName=this.category.fullname,this.aggregation=this.category.aggregation},methods:{setAggretation(e){this.aggregation=e},changeAggregation(e){this.aggregation=e},updateCategory(){this.$store.dispatch(l.actions.UPDATE_CATEGORY,{...this.category,fullname:this.categoryFullName,aggregation:this.aggregation,aggregationcoef:50}).then(()=>{this.$emit(f)}).catch(()=>{this.$toasted.show("Ha habido un error guardando la categoria",{duration:3e3,theme:"bubble"})})}}})),N=(e.component("close-modal-button",{template:'\n        <i class="fa fa-2x fa-times-circle" v-bind:style="closeButtonStyle"  @click="$modal.hide(modalName)"></i>\n        ',props:{modalName:{type:String,required:!0}},data:function(){return{closeButtonStyle:{position:"absolute",top:"10px",right:"10px"}}}}),e.component("modal-add-element",{template:'\n       <modal \n        v-bind:name="modalName"\n        v-bind:transition="\'nice-modal-fade\'"\n        :draggable="true"\n        >\n            <add-element-form v-on:addElementOK="$modal.hide(modalName)"></add-element-form>\n            <close-modal-button v-bind:modalName="modalName"></close-modal-button>\n       </modal>\n       ',data:function(){return{modalName:b}}}),e.component("modal-edit-category",{template:'<modal\n                    v-bind:name="modalName" \n                    v-bind:transition="\'nice-modal-fade\'"\n                    :draggable="true"\n                    >\n                        <edit-category-form   v-on:updateCategoryOK="$modal.hide(modalName)"></edit-category-form>\n                        <close-modal-button v-bind:modalName="modalName"></close-modal-button>\n                   </modal>\n       ',data:function(){return{modalName:v}}}),e.component("add-element-form",{template:'\n        <div class="add-element-form">\n           <form>\n           <h2 :style="{ \'text-align\': \'center\' }">Añadir elemento</h2>\n           <label></label>\n           <select id="elementType" v-model="elementTypeId">\n               <option v-for="elementType in elementTypes" v-bind:value="elementType.id">\n                {{elementType.name}}\n               </option>\n           </select>\n            <br/>\n           <label :style="{ \'text-align\': \'center\' }" for="elementName">\n            Nombre del elemento:\n            </label>\n            <input id="elementName" v-model="elementName">\n           <br />\n            <template v-if="parentCategory.aggregation == weigthedMeanOfGrades">\n                <label for="elementAggregationCoef">\n                    Peso: \n                </label>\n                        <input \n            placeholder="Ingrese un valor entre 1 y 100" \n            id="elementAggregationCoef" \n            v-model="elementAggregationCoef" type="number"\n            v-on:keypress="isNumber($event)">\n            </template>\n            <br/>\n            <template v-if="elementTypeId === categoryElementTypeId || elementTypeId === partialExamElementId">\n                <label >\n                    Tipo de agregación\n                </label>\n                <select-aggregation\n                    v-bind:changeAggregation="changeAggregation"\n                />\n            </template>\n            <br />\n            <div style="text-align:center">\n                <button :style="boton" type="button" v-on:click="createElement()">Añadir</button>\n            </div>\n           </form>\n       </div>\n       ',data:function(){return{boton:{"background-color":"#cd1f32",color:"white"},elementTypes:E,categoryElementTypeId:C.id,partialExamElementId:w.id,elementTypeId:I.id,elementName:"",aggregation:c.aggregations.SIMPLE,elementAggregationCoef:""}},computed:{...n.mapState(["selectedCategoryId","course"]),...n.mapGetters(["selectedCategory"]),parentCategory:function(){return this.selectedCategory},weigthedMeanOfGrades:function(){return c.aggregations.PROMEDIO}},methods:{isNumber:function(e){var t=(e=e||window.event).which?e.which:e.keyCode;if(!(t>31&&(t<48||t>57)&&46!==t))return!0;e.preventDefault()},changeAggregation(e){this.aggregation=e},extractItem(){return{itemname:this.elementName,aggregationcoef:this.elementAggregationCoef,parent_category:this.parentCategory.id,courseid:this.course.id}},extractPartialExam(){return{itemname:this.elementName,aggregationcoef:this.elementAggregationCoef,parent_category:this.parentCategory.id,courseid:this.course.id,aggregation:this.aggregation}},extractCategory(){return{fullname:this.elementName,courseid:this.course.id,parent_category:this.parentCategory.id,aggregation:this.aggregation}},createItem(){const e=this.extractItem();this.$store.dispatch(l.actions.ADD_ITEM,e).then(()=>{this.$emit(y),this.$toasted.show(`Se ha añadido el item '${e.itemname}'`,{duration:3e3,icon:"fa fa-check"}),this.$router.go()}).catch(()=>{this.$toasted.show("Ha ocurrido un error guardando el nuevo item.",{duration:3e3,theme:"bubble"})})},createCoursePartialExam(){const e=this.extractPartialExam();this.$store.dispatch(l.actions.ADD_PARTIAL_EXAM,e).then(()=>{this.$emit(y),this.$toasted.show(`Se ha añadido el parcial '${e.itemname}'`,{duration:3e3,icon:"fa fa-check"}),this.$router.go()}).catch(()=>{this.$toasted.show("Ha ocurrido un error guardando el nuevo parcial.",{duration:3e3,theme:"bubble"})})},createCategory(){const e=this.extractCategory(),t={category:e,weight:this.elementAggregationCoef};this.$store.dispatch(l.actions.ADD_CATEGORY,t).then(()=>{this.$emit(y),this.$toasted.show(`Se ha añadido la categoria '${e.fullname}'`,{duration:3e3,icon:"fa fa-check"}),this.$router.go()}).catch(()=>{this.$toasted.show("Ha ocurrido un error guardando la nueva categoria.",{duration:3e3,theme:"bubble"})})},createElement(){this.elementTypeId===I.id?this.createItem():this.elementTypeId===C.id?this.createCategory():this.elementTypeId===w.id&&this.createCoursePartialExam()}}}),e.component("item-mini-menu",{template:'\n                <div>\n                    <i class="fa fa-trash" v-on:click="showDeleteItemDialog()"></i>\n                </div>\n            ',props:["itemId"],methods:{deleteItem(){return this.$store.dispatch(l.actions.DELETE_ITEM,this.itemId).then(()=>{this.$toasted.show("Se ha borrado el item",{duration:3e3}),this.$router.go()}).catch(()=>{this.$toasted.show("Ha habido un error al borrar el item, no se ha borrado",{duration:3e3,theme:"bubble"})})},showDeleteItemDialog(){this.$modal.show("dialog",{title:"Eliminación de item",text:"Estas a punto de eliminar un item",buttons:[{title:"Borrar",handler:()=>{this.deleteItem().finally(()=>this.$modal.hide("dialog"))}},{title:"Cancelar"}]})}}}),e.component("category-mini-menu",{template:'\n                <div class ="category-mini-menu" v-bind:style="style">\n                    <i class="fa fa-edit" v-on:click="showEditDialog"></i>\n                    <i class="fa fa-plus" v-on:click="showAddElementDialog"></i>\n                    <i class="fa fa-trash" v-show="showDelete"" v-on:click="showDeleteElementDialog"></i>\n                </div>\n            ',props:{categoryId:[Number,String],showDelete:{type:Boolean,required:!1,default:!0},allowEditName:{type:Boolean,required:!1,default:!0}},data:function(){return{style:{display:"grid",gridTemplateColumns:"repeat(3, max-content)",gridColumnGap:"8px"}}},computed:{...n.mapGetters(["categoryById"]),category:function(){return this.categoryById(this.categoryId)}},methods:{deleteCategory(){return this.$store.dispatch(l.actions.DELETE_CATEGORY,this.categoryId).then(()=>{this.$toasted.show("Se ha borrado la categoria",{duration:3e3}),this.$router.go()}).catch(()=>{this.$toasted.show("Ha habido un error al borrar la categoria, no se ha borrado",{duration:3e3,theme:"bubble"})})},showDeleteElementDialog(){this.$modal.show("dialog",{title:"Eliminación de categoria",text:"Estas a punto de eliminar una categoria",buttons:[{title:"Borrar",handler:()=>{this.deleteCategory().finally(()=>this.$modal.hide("dialog"))}},{title:"Cancelar"}]})},showEditDialog(){this.$store.commit(l.mutations.SET_SELECTED_CATEGORY_ID,this.category.id),this.$modal.show(v)},showAddElementDialog(){this.$store.commit(l.mutations.SET_SELECTED_CATEGORY_ID,this.category.id),this.$modal.show(b)}}}),e.component("th-course",{template:'\n            <th \n            v-bind:colspan="colspan"\n            @mouseover="showMenu = true"\n            @mouseout="showMenu = false"\n            >\n           \n                <flex-row align-v="center" v-bind:style="editZoneStyles" >\n                    <span class="gradeitemheader">        \n                    {{course.fullname}}       \n                    </span>\n                    <category-mini-menu v-bind:showDelete="false" v-bind:categoryId="category.id"  v-show="showMenu"></category-mini-menu>\n                </flex-row> \n                </th>\n            </th>\n       ',props:["colspan"],data:function(){return{showMenu:!1,editZoneStyles:{display:"grid",gridTemplateColumns:"repeat(2, max-content)",gridColumnGap:"5px"}}},computed:{...n.mapState(["course"]),...n.mapGetters(["courseLevel","categoryById"]),courseCategoryId:function(){return this.courseLevel.object.id},category:function(){return this.categoryById(this.courseCategoryId)}}})),T=(e.component("course-mini-menu",{template:'\n                <div v-bind:style="style">\n                    <i class="fa fa-plus" v-on:click="showAddElementDialog"></i>\n                </div>\n            ',props:["categoryId"],data:function(){return{style:{display:"grid",gridTemplateColumns:"repeat(3, max-content)",gridColumnGap:"8px"}}},computed:{...n.mapGetters(["categoryById"]),category:function(){return this.categoryById(this.categoryId)}},methods:{showAddElementDialog(){this.$store.commit(l.mutations.SET_SELECTED_CATEGORY_ID,this.category.id),this.$modal.show(b)}}}),e.component("th-category",{template:'    \n            <th\n            :title="category.fullname"\n            class="th-category"\n            @mouseover="showMenu = true"\n            @mouseout="showMenu = false" \n            v-bind:colspan="childSize" >\n                <flex-row align-v="center"  v-bind:style="editZoneStyles">\n                    <input v-model="catName" :class="getCatClass" @focus="catFocus" @blur="catBlur" @keyup.enter="$event.target.blur()"></input>\n                    <input\n                     v-model="catWeight" \n                     :class="catGetWeightClass"\n                     @focus="catWFocus" @blur="catWBlur"\n                     @keyup.enter="$event.target.blur()"\n                     v-if="parentCategory.aggregation == weightedAggregation"\n                     v-on:keypress="isNumber($event)"\n                     ></input>\n                    <category-mini-menu v-bind:categoryId="category.id" v-show="showMenu"></category-mini-menu>\n                </flex-row>\n            </th>\n       ',created(){let e=this.category.fullname,t=document.createElement("div");t.innerHTML=e;let n=t.textContent;this.catName=n.length>30?n.slice(0,30)+"...":n,this.catWeight=this.$options.filters.round(this.aggregationCoef,2)+"%"},props:["element"],data:function(){return{showFullName:!1,getCatClass:"catnotfocused",catGetWeightClass:"catwnotfocused",catName:"",catWeight:"",editZoneStyles:{"max-height":"45px"},showMenu:!1}},computed:{...n.mapGetters(["categoryById","categoryChildSize"]),...n.mapState(["items"]),category:function(){return this.categoryById(this.element.object.id)},childSize:function(){return this.categoryChildSize(this.category.id)},categoryGradeItem:function(){return this.items[this.category.grade_item]},aggregationCoef:function(){return this.categoryGradeItem.aggregationcoef},parentCategory:function(){return this.categoryById(this.category.parent)},weightedAggregation:function(){return c.aggregations.PROMEDIO}},methods:{isNumber:function(e){var t=(e=e||window.event).which?e.which:e.keyCode;if(!(t>31&&(t<48||t>57)&&46!==t))return!0;e.preventDefault()},catFocus:function(){this.getCatClass="catwithfocus",this.showFullName=!0,this.uptadeCatName()},catBlur:function(){this.getCatClass="catnotfocused",this.showFullName=!1,this.updateCategoryName()},catWFocus:function(){this.catGetWeightClass="catwwithfocus",this.showFullName=!0,this.updateWeight()},catWBlur:function(){this.catGetWeightClass="catwnotfocused",this.showFullName=!1,this.saveAggregationCoef()},updateCategoryName:function(){this.$store.dispatch(l.actions.UPDATE_CATEGORY,{...this.category,fullname:this.catName})},saveAggregationCoef:function(){this.$store.dispatch(l.actions.UPDATE_ITEM,{...this.categoryGradeItem,aggregationcoef:this.catWeight})},uptadeCatName:function(){this.showFullName?this.catName=this.category.fullname:this.catName=this.$options.filters.trunc(this.category.fullname,30)},updateWeight:function(){this.catWeight=this.$options.filters.round(this.aggregationCoef,2),"catwnotfocused"===this.catGetWeightClass&&(this.catWeight+="%")}}})),D=(e.component("item-actions-mini",{template:"\n        \n        ",props:["itemId"]}),e.component("th-student-names",{template:'\n       <th class="th-student-names" :style="stickyStyles"> \n           <flex-row>\n               <a v-on:click="changeOrderToLastame()">Apellidos</a> \n               <span>/ </span>\n               <a v-on:click="changeOrderToName">Nombres</a>\n           </flex-row> \n       </th>\n       ',data:function(){return{lastNameDirectionAsc:!0,firstNameDirectionAsc:!0,stickyStyles:{position:"sticky",top:"0",left:"0","background-clip":"padding-box","z-index":"999999"}}},methods:{changeOrderToLastame(){this.$store.commit(l.mutations.SET_STUDENT_SORT_METHOD,{name:c.sortStudentMethods.LAST_NAME,order:this.lastNameDirectionAsc?c.sortDirection.ASC:"desc"}),this.lastNameDirectionAsc=!this.lastNameDirectionAsc},changeOrderToName(){this.$store.commit(l.mutations.SET_STUDENT_SORT_METHOD,{name:c.sortStudentMethods.FIRST_NAME,order:this.firstNameDirectionAsc?c.sortDirection.ASC:"desc"}),this.firstNameDirectionAsc=!this.firstNameDirectionAsc}}}),e.component("tr-items",{template:'\n                    <tr class="tr-items">\n                    <th-student-names></th-student-names>\n                    <th colspan="1" v-for="additionalColumnAtFirst in additionalColumnsAtFirst" v-show="!additionalColumnAtFirst.hide">{{additionalColumnAtFirst.text}}</th>\n                    <template v-for="(itemId, index) in orderedItemIds">       \n                        <th-item-category \n                        v-if="items[itemId].itemtype === \'category\'" \n                        v-bind:itemId="items[itemId].id" \n                        v-bind:colspan="1"\n                        :style="stickyStyles"\n                        ></th-item-category> \n                        \n                        <th-item-manual-and-mod \n                        v-if="items[itemId].itemtype === \'manual\' || items[itemId].itemtype === \'mod\'"  \n                        v-bind:itemId="items[itemId].id" \n                        ></th-item-manual-and-mod>\n                     </template>\n                     <th colspan="1" v-for="additionalColumnAtEnd in additionalColumnsAtEnd">{{additionalColumnAtEnd.text}}</th>\n                     </tr>\n   ',computed:{...n.mapGetters({orderedItemIds:"itemOrderIds"}),...n.mapState(["additionalColumnsAtFirst","additionalColumnsAtEnd","items"])},data:function(){return{stickyStyles:{}}}}));e.component("editable",{template:'<div contenteditable="true" @blur="update">{{content}}<span>{{sufix}}</span></div>',props:["content","sufix"],methods:{getContent:function(e){return e.target.innerText.replace(this.sufix,"")},update:function(e){this.$emit("update",this.getContent(e))}}});var S=e.component("th-item-manual-and-mod",{template:'         \n                <th class="th-item-manual-and-mod"\n                v-cloak\n                 @mouseover="showMenuItems = true"\n                 @mouseout="showMenuItems = false"\n                 :title="item.itemname"\n                >\x3c!--v-on:click="deleteItem(item.id)"--\x3e\n                <flex-row v-bind:style="editZoneStyles" align-v="center">\n                    <input v-model="content" :class="getClass" @focus="focus" @blur="blur" @keydown.enter="saveNameChanges" @keyup.enter="$event.target.blur()"></input>\n                    <input\n                     v-model="weight" \n                     :class="getWeightClass"\n                     @focus="wfocus" @blur="wblur"\n                     @keyup.enter="$event.target.blur()"\n                     v-if="parentCategory.aggregation == weightedAggregation"\n                     v-on:keypress="isNumber($event)"\n                     ></input>\n                    <item-mini-menu v-show="showMenuItems" v-bind:itemId="item.id"></item-mini-menu>\n                </flex-row>\n                </th>\n   ',created(){let e=this.item.itemname,t=document.createElement("div");t.innerHTML=e;let n=t.textContent;this.content=n.length>18?n.slice(0,18)+"...":n,this.weight=this.$options.filters.round(this.item.aggregationcoef,2)+"%"},data:function(){return{showMenuItems:!1,showFullName:!1,getClass:"inotfocused",getWeightClass:"iwnotfocused",content:"",weight:0,editZoneStyles:{"max-height":"20px"}}},props:["itemId"],methods:{isNumber:function(e){var t=(e=e||window.event).which?e.which:e.keyCode;if(!(t>31&&(t<48||t>57)&&46!==t))return!0;e.preventDefault()},focus:function(){this.getClass="iwithfocus",this.showFullName=!0,this.uptadeContent()},blur:function(){this.getClass="inotfocused",this.showFullName=!1,this.content!==this.item.itemname?this.saveNameChanges():this.uptadeContent()},wfocus:function(){this.getWeightClass="iwwithfocus",this.updateWeight()},wblur:function(){this.getWeightClass="iwnotfocused",parseFloat(this.weight)!==parseFloat(this.item.aggregationcoef)?this.saveAggregationCoefChanges():this.updateWeight()},...n.mapActions({deleteItem:l.actions.DELETE_ITEM}),saveNameChanges:function(){this.$store.dispatch(l.actions.UPDATE_ITEM,{...this.item,itemname:this.content})},saveAggregationCoefChanges:function(){this.$store.dispatch(l.actions.UPDATE_ITEM,{...this.item,aggregationcoef:this.weight})},uptadeContent:function(){if(console.log("update"),this.showFullName)this.content=this.item.itemname;else{let e=this.item.itemname,t=18,n="...",a=document.createElement("div");a.innerHTML=e;let i=a.textContent;this.content=i.length>t?i.slice(0,t)+n:i}},updateWeight:function(){console.log(this.item.aggregationcoef),this.weight=this.$options.filters.round(this.item.aggregationcoef,2),"iwnotfocused"===this.getWeightClass&&(this.weight+="%")}},computed:{...n.mapState(["items"]),...n.mapGetters(["categoryById"]),item:function(){return this.items[this.itemId]},parentCategory:function(){return this.categoryById(this.item.categoryid)},weightedAggregation:function(){return c.aggregations.PROMEDIO}}});e.component("th-item-category",{template:'         \n                <th class="th-item-category"v-bind:colspan="colspan"\n                 :title="itemName">\n                            {{itemName | trunc(20, \'...\')}}\n                </th>\n   ',props:["itemId","colspan"],computed:{...n.mapState(["items"]),...n.mapGetters(["categoryById"]),item:function(){return this.items[this.itemId]},categoryParent:function(){return this.categoryById(this.item.iteminstance)},itemName:function(){return"TOTAL "+this.categoryParent.fullname}}}),e.component("th-student",{template:'\n                <th class="th-student"scope="row" v-bind:style="stickyStyles">\n                    {{studentFullName}}\n                </th>\n                ',props:["studentId"],computed:{...n.mapGetters(["studentById"]),...n.mapGetters({students:"studentSet"}),student:function(){return this.studentById(this.studentId)},studentFullName:function(){return this.student.lastname+" "+this.student.firstname}},data:function(){return{stickyStyles:{position:"sticky",left:"0","background-clip":"padding-box","min-width":"400px!important"}}}}),e.component("td-grade",{template:'\n                <td  class="td-grade"\n                v-bind:style="this.inputDisabled? { \'background-color\': \'#e1e4fe\' } : { }"> \n                \x3c!--{{item.itemtype}}--\x3e\n                <input \n                class="grade-input"\n                v-bind:disabled="inputDisabled" \n                type="number"\n                v-bind:tabindex="tabIndex" \n                v-bind:step="step"  \n                v-bind:max="grade.rawgrademax" \n                v-bind:min="grade.rawgrademin" \n                v-bind:size="decimalPlaces + 1"\n                v-on:keypress="isNumber($event)"\n                v-model.lazy="finalGrade">\n                </td>\n                ',props:["gradeId","studentIndex","itemIndex"],methods:{...n.mapActions({updateGrade:l.actions.UPDATE_GRADE}),isNumber:function(e){var t=(e=e||window.event).which?e.which:e.keyCode;if(!(t>31&&(t<48||t>57)&&46!==t))return!0;e.preventDefault()}},computed:{...n.mapState(["grades","items","course","decimalPlaces"]),step:function(){return Math.pow(10,-this.decimalPlaces)},...n.mapGetters(["studentsCount"]),tabIndex:function(){return(this.itemIndex+1)*this.studentsCount+this.studentIndex+1},inputDisabled:function(){return"category"===this.item.itemtype||"course"===this.item.itemtype},grade:function(){return this.grades[this.gradeId]},item:function(){return this.items[this.grade.itemid]},finalGrade:{get(){return console.log("getFInal"),m.round(this.grade.finalgrade,this.decimalPlaces)},set(e){console.log("setFinal"),this.grade.finalgrade=e,this.updateGrade(this.grade,this.course.id)}}}}),e.component("tr-grades",{template:'\n                <tr \n                v-bind:class="{is_ases: student.is_ases}" \n                v-bind:title="student.is_ases? \'El estudiante pertenece al programa ASES\' : \'\'"\n                >\n                    <th-student v-bind:studentId="student.id"></th-student>\n                    <td >{{student.username}}</td>\n                    <td-grade \n                    v-for="(gradeId, index) in studentGradeIdsOrdered" \n                    :key="gradeId"\n                    v-bind:studentIndex="studentIndex"\n                    v-bind:itemIndex="index"\n                    v-bind:gradeId="gradeId"\n                    >\n                    </td-grade>\n                   \n                </tr>\n                ',props:["studentId","studentIndex"],computed:{...n.mapState(["students","grades"]),...n.mapGetters(["itemOrderIds"]),student:function(){return this.students[this.studentId]},studentGradeIdsOrdered:function(){return m.orderGradeIdsInItemSetOrder(this.student.gradeIds,this.grades,this.itemOrderIds)}}});e.filter(h.round.name,h.round.func),e.filter(h.trun.name,h.trun.func);var _=new e({store:A,router:new t({routes:u.routes}),components:{ThCourse:N,EditCategoryForm:x,ThCategory:T,TrItems:D,ThItemManualAndMod:S}});return{init:function(){_.$mount("#app"),$(document).ready(function(){})}}});
